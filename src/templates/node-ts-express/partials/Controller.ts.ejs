// Auto-generated by create-backlist on <%= new Date().toISOString() %>
import { Request, Response } from 'express';
import <%= modelName %>, { I<%= modelName %> } from '../models/<%= modelName %>.model';

// @desc    Create a new <%= modelName %>
export const create<%= modelName %> = async (req: Request, res: Response) => {
  try {
    const newDoc = new <%= modelName %>(req.body);
    await newDoc.save();
    res.status(201).json(newDoc);
  } catch (error) {
    res.status(500).json({ message: 'Error creating document', error });
  }
};

// @desc    Get all <%= modelName %>s
export const getAll<%= modelName %>s = async (req: Request, res: Response) => {
  try {
    const docs = await <%= modelName %>.find();
    res.status(200).json(docs);
  } catch (error) {
    res.status(500).json({ message: 'Error fetching documents', error });
  }
};

// @desc    Get a single <%= modelName %> by ID
export const get<%= modelName %>ById = async (req: Request, res: Response) => {
  try {
    const doc = await <%= modelName %>.findById(req.params.id);
    if (!doc) return res.status(404).json({ message: 'Document not found' });
    res.status(200).json(doc);
  } catch (error) {
    res.status(500).json({ message: 'Error fetching document', error });
  }
};

// @desc    Update a <%= modelName %> by ID
export const update<%= modelName %>ById = async (req: Request, res: Response) => {
  try {
    const doc = await <%= modelName %>.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true });
    if (!doc) return res.status(404).json({ message: 'Document not found' });
    res.status(200).json(doc);
  } catch (error) {
    res.status(500).json({ message: 'Error updating document', error });
  }
};

// @desc    Delete a <%= modelName %> by ID
export const delete<%= modelName %>ById = async (req: Request, res: Response) => {
  try {
    const doc = await <%= modelName %>.findByIdAndDelete(req.params.id);
    if (!doc) return res.status(404).json({ message: 'Document not found' });
    res.status(200).json({ message: 'Document deleted successfully' });
  } catch (error) {
    res.status(500).json({ message: 'Error deleting document', error });
  }
};